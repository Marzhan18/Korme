
--------------------------------------------------------
--  DDL for Table ARTISTS
--------------------------------------------------------

  CREATE TABLE "ZHAN"."ARTISTS" 
   (	"ARTISTS_ID" NUMBER(11,0), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE), 
	"PASSWORD" NUMBER(11,0), 
	"PHONE" NUMBER(11,0), 
	"IMAGE" VARCHAR2(255 BYTE) DEFAULT NULL, 
	"LAST_IN" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ARTISTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "ZHAN"."PK_ARTISTS" ON "ZHAN"."ARTISTS" ("ARTISTS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C0012475
--------------------------------------------------------

  CREATE UNIQUE INDEX "ZHAN"."SYS_C0012475" ON "ZHAN"."ARTISTS" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger ADD_ARTIST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ZHAN"."ADD_ARTIST" 
   before insert on "ZHAN"."ARTISTS" 
   for each row 
begin  
   if inserting then 
      if :NEW."ARTISTS_ID" is null then 
         select SEQUENCE1.nextval into :NEW."ARTISTS_ID" from dual; 
      end if; 
   end if; 
end;

/
ALTER TRIGGER "ZHAN"."ADD_ARTIST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ARTISTS_TRIGGER
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ZHAN"."ARTISTS_TRIGGER" BEFORE
  INSERT ON artists
  FOR EACH ROW
DECLARE
  v_count NUMBER;
BEGIN
  SELECT
    COUNT(*)
  INTO v_count
  FROM
    artists
  WHERE
    email = :new.email;

  IF v_count > 0 THEN
    raise_application_error(-20500, 'Duplicate email');
  END IF;
END;
/
ALTER TRIGGER "ZHAN"."ARTISTS_TRIGGER" ENABLE;
--------------------------------------------------------
--  Constraints for Table ARTISTS
--------------------------------------------------------

  ALTER TABLE "ZHAN"."ARTISTS" ADD CONSTRAINT "PK_ARTISTS" PRIMARY KEY ("ARTISTS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "ZHAN"."ARTISTS" MODIFY ("USERNAME" NOT NULL ENABLE);
 
  ALTER TABLE "ZHAN"."ARTISTS" MODIFY ("EMAIL" NOT NULL ENABLE);
 
  ALTER TABLE "ZHAN"."ARTISTS" MODIFY ("PASSWORD" NOT NULL ENABLE);
 
  ALTER TABLE "ZHAN"."ARTISTS" MODIFY ("PHONE" NOT NULL ENABLE);
 
  ALTER TABLE "ZHAN"."ARTISTS" MODIFY ("LAST_IN" NOT NULL ENABLE);
 
  ALTER TABLE "ZHAN"."ARTISTS" ADD UNIQUE ("EMAIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
